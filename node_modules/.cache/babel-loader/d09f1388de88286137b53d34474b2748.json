{"ast":null,"code":"var _jsxFileName = \"/Users/blakefletcher/projects/spanish-conjugator/src/components/conjugatorPage/Text.js\";\nimport React from 'react';\n\nvar randomProperty = function randomProperty(obj) {\n  return obj[Object.keys(obj)[Math.floor(Math.random() * 7) + 7]];\n};\n\nvar Text = function Text(props) {\n  var randomVerb = props.data[Math.floor(Math.random() * props.data.length)];\n  var randomPerson = Object.entries(randomVerb)[Math.floor(Math.random() * 7) + 7];\n  var number = Math.floor(Math.random() * 7); // conjugated verbs range from index 0-6 in the object\n\n  var person = {\n    form_1s: 'Singular, 1st person',\n    form_2s: 'Singular, 2nd person',\n    form_3s: 'Singular, 3rd person',\n    form_1p: 'Plural, 1st person',\n    form_2p: 'Plural, 2nd person',\n    form_3p: 'Plural, 3rd person',\n    gerund: 'Gerund'\n  }; // another option would be to edit the database and replace the keys with the values in this object\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Verb: \", randomVerb.infinitive), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Translation: \", randomVerb.infinitive_english), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Tense: \", randomVerb.tense, \" (\", randomVerb.tense_english, \")\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Person: \", Object.values(person)[number]), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, randomPerson[0]), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, randomPerson[1])));\n};\n\nexport default Text;","map":{"version":3,"sources":["/Users/blakefletcher/projects/spanish-conjugator/src/components/conjugatorPage/Text.js"],"names":["React","randomProperty","obj","Object","keys","Math","floor","random","Text","props","randomVerb","data","length","randomPerson","entries","number","person","form_1s","form_2s","form_3s","form_1p","form_2p","form_3p","gerund","infinitive","infinitive_english","tense","tense_english","values"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAIC,cAAc,GAAG,SAAjBA,cAAiB,CAAUC,GAAV,EAAe;AAClC,SAAOA,GAAG,CAACC,MAAM,CAACC,IAAP,CAAYF,GAAZ,EAAkBG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,IAAgC,CAAlD,CAAD,CAAV;AACD,CAFD;;AAIA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK,EAAI;AAEpB,MAAMC,UAAU,GAAGD,KAAK,CAACE,IAAN,CAAWN,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBE,KAAK,CAACE,IAAN,CAAWC,MAAtC,CAAX,CAAnB;AACA,MAAMC,YAAY,GAAGV,MAAM,CAACW,OAAP,CAAeJ,UAAf,EAA4BL,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,IAAgC,CAA5D,CAArB;AACA,MAAMQ,MAAM,GAAGV,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAf,CAJoB,CAI0B;;AAC9C,MAAMS,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE,sBADI;AAEbC,IAAAA,OAAO,EAAE,sBAFI;AAGbC,IAAAA,OAAO,EAAE,sBAHI;AAIbC,IAAAA,OAAO,EAAE,oBAJI;AAKbC,IAAAA,OAAO,EAAE,oBALI;AAMbC,IAAAA,OAAO,EAAE,oBANI;AAObC,IAAAA,MAAM,EAAE;AAPK,GAAf,CALoB,CAajB;;AACH,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUb,UAAU,CAACc,UAArB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBd,UAAU,CAACe,kBAA5B,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACUf,UAAU,CAACgB,KADrB,QAC8BhB,UAAU,CAACiB,aADzC,MAHF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYxB,MAAM,CAACyB,MAAP,CAAcZ,MAAd,EAAsBD,MAAtB,CAAZ,CANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,YAAY,CAAC,CAAD,CAAhB,CAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,YAAY,CAAC,CAAD,CAAhB,CARF,CADF,CADF;AAcD,CA5BD;;AA8BA,eAAeL,IAAf","sourcesContent":["import React from 'react';\n\nvar randomProperty = function (obj) {\n  return obj[Object.keys(obj)[ Math.floor(Math.random() * 7) + 7 ]];\n};\n\nconst Text = props => {\n  \n  const randomVerb = props.data[Math.floor(Math.random() * props.data.length)];\n  const randomPerson = Object.entries(randomVerb)[ Math.floor(Math.random() * 7) + 7 ]\n  const number = Math.floor(Math.random() * 7); // conjugated verbs range from index 0-6 in the object\n  const person = {\n    form_1s: 'Singular, 1st person',\n    form_2s: 'Singular, 2nd person',\n    form_3s: 'Singular, 3rd person',\n    form_1p: 'Plural, 1st person',\n    form_2p: 'Plural, 2nd person',\n    form_3p: 'Plural, 3rd person',\n    gerund: 'Gerund'\n  }; // another option would be to edit the database and replace the keys with the values in this object\n  return (\n    <div>\n      <div>\n        <p>Verb: {randomVerb.infinitive}</p>\n        <p>Translation: {randomVerb.infinitive_english}</p>\n        <p>\n          Tense: {randomVerb.tense} ({randomVerb.tense_english})\n        </p>\n        <p>Person: {Object.values(person)[number]}</p>\n        <p>{randomPerson[0]}</p>\n        <p>{randomPerson[1]}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Text;\n"]},"metadata":{},"sourceType":"module"}