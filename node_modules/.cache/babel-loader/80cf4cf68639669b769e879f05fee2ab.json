{"ast":null,"code":"import _classCallCheck from \"/Users/blakefletcher/projects/spanish-conjugator-test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/blakefletcher/projects/spanish-conjugator-test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/blakefletcher/projects/spanish-conjugator-test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/blakefletcher/projects/spanish-conjugator-test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/blakefletcher/projects/spanish-conjugator-test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/blakefletcher/projects/spanish-conjugator-test/src/components/conjugatorPage/Random.js\";\nimport React, { Component } from 'react';\n\nvar Random =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Random, _Component);\n\n  function Random(props) {\n    var _this;\n\n    _classCallCheck(this, Random);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Random).call(this, props));\n    _this.randomVerb = _this.props.data[Math.floor(Math.random() * _this.props.data.length)];\n    _this.randomPerson = Object.entries(_this.randomVerb)[Math.floor(Math.random() * 7) + 7];\n\n    _this.handleChange = function (event) {\n      _this.setState({\n        value: event.target.value\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      if (_this.randomPerson[1] === _this.state.value) {\n        alert(\"Correct!\");\n      }\n\n      _this.setState({\n        answer: _this.randomPerson[1]\n      });\n    };\n\n    _this.state = {\n      value: '',\n      answer: ''\n    };\n    return _this;\n  }\n\n  _createClass(Random, [{\n    key: \"render\",\n    value: function render() {\n      var _this$randomVerb = this.randomVerb,\n          infinitive = _this$randomVerb.infinitive,\n          infinitive_english = _this$randomVerb.infinitive_english,\n          tense_english = _this$randomVerb.tense_english;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Verb: \"), infinitive), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Translation: \"), infinitive_english), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Tense: \"), tense_english), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Person:\"), this.randomPerson[0] === 'form_1s' && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \" Singular, 1st person\"), this.randomPerson[0] === 'form_2s' && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \" Singular, 2nd person\"), this.randomPerson[0] === 'form_3s' && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \" Singular, 3rd person\"), this.randomPerson[0] === 'form_1p' && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \" Plural, 1st person\"), this.randomPerson[0] === 'form_2p' && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \" Plural, 2nd person\"), this.randomPerson[0] === 'form_3p' && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \" Plural, 3rd person\"), this.randomPerson[0] === 'gerund' && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \" Gerund\")), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        style: {\n          border: 'none',\n          borderBottom: 'solid 2px blue',\n          backgroundColor: 'white',\n          width: '100%',\n          height: '30px',\n          marginBottom: '5px'\n        },\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        style: {\n          fontSize: '12px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"En Espa\\xF1ol\")), React.createElement(\"div\", {\n        style: {\n          marginTop: '1rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Check\")), this.state.answer && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"False, the correct answer is \", React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, this.state.answer), \".\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return window.location.reload();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Next verb\")));\n    }\n  }]);\n\n  return Random;\n}(Component);\n\nexport default Random;","map":{"version":3,"sources":["/Users/blakefletcher/projects/spanish-conjugator-test/src/components/conjugatorPage/Random.js"],"names":["React","Component","Random","props","randomVerb","data","Math","floor","random","length","randomPerson","Object","entries","handleChange","event","setState","value","target","handleSubmit","preventDefault","state","alert","answer","infinitive","infinitive_english","tense_english","border","borderBottom","backgroundColor","width","height","marginBottom","fontSize","marginTop","window","location","reload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass Random extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            value: '',\n            answer: ''\n         }\n    }\n\n    randomVerb = this.props.data[Math.floor(Math.random() * this.props.data.length)];\n    randomPerson = Object.entries(this.randomVerb)[ Math.floor(Math.random() * 7) + 7 ]\n\n    handleChange = (event) => {\n        this.setState({value: event.target.value});\n      }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        if (this.randomPerson[1] === this.state.value) {\n            alert(\"Correct!\")\n        } this.setState({answer: this.randomPerson[1]}) \n    }\n    \n    render() { \n        const { infinitive, infinitive_english, tense_english } = this.randomVerb\n        return ( \n            <div>\n                <p><b>Verb: </b>{infinitive}</p>\n                <p><b>Translation: </b>{infinitive_english}</p>\n                <p><b>Tense: </b>{tense_english}</p>\n                <p><b>Person:</b>\n                    { this.randomPerson[0] === 'form_1s' &&\n                        <span> Singular, 1st person</span>\n                    }\n                    { this.randomPerson[0] === 'form_2s' &&\n                        <span> Singular, 2nd person</span>\n                    }\n                    { this.randomPerson[0] === 'form_3s' &&\n                        <span> Singular, 3rd person</span>\n                    }\n                    { this.randomPerson[0] === 'form_1p' &&\n                        <span> Plural, 1st person</span>\n                    }\n                    { this.randomPerson[0] === 'form_2p' &&\n                        <span> Plural, 2nd person</span>\n                    }\n                    { this.randomPerson[0] === 'form_3p' &&\n                        <span> Plural, 3rd person</span>\n                    }\n                    { this.randomPerson[0] === 'gerund' &&\n                        <span> Gerund</span>\n                    }\n                </p>\n                {/* <span class=\"input input--minoru\">\n\t\t\t\t\t<input class=\"input__field input__field--yoko\" type=\"text\" id=\"input-16\"/>\n\t\t\t\t\t<label class=\"input__label input__label--yoko\" for=\"input-16\">\n\t\t\t\t\t\t<span class=\"input__label-content input__label-content--yoko\">En Español</span>\n\t\t\t\t\t</label>\n\t\t\t\t</span> */}\n                <label>\n                    <input \n                        type=\"text\" \n                        style={{border: 'none', borderBottom: 'solid 2px blue', backgroundColor: 'white', width: '100%', height: '30px', marginBottom: '5px'}}\n                        value={this.state.value} \n                        onChange={this.handleChange}\n                    />\n                    <span style={{fontSize: '12px'}}>En Español</span>\n                </label>\n                <div style={{marginTop: '1rem'}}>\n                    <button onClick={this.handleSubmit}>Check</button>\n                </div>\n                    { this.state.answer &&\n                        <p>False, the correct answer is <i>{this.state.answer}</i>.</p>\n                    }\n                <p><button onClick={() => window.location.reload()}>Next verb</button></p>\n            </div>\n         );\n    }\n}\n \nexport default Random;"]},"metadata":{},"sourceType":"module"}