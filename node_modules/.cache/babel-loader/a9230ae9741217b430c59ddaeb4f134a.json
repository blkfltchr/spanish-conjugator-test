{"ast":null,"code":"import _classCallCheck from \"/Users/blakefletcher/projects/spanish-conjugator-test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/blakefletcher/projects/spanish-conjugator-test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/blakefletcher/projects/spanish-conjugator-test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/blakefletcher/projects/spanish-conjugator-test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/blakefletcher/projects/spanish-conjugator-test/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/blakefletcher/projects/spanish-conjugator-test/src/components/conjugatorPage/Random.js\";\nimport React, { Component } from 'react';\n\nvar Random =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Random, _Component);\n\n  function Random(props) {\n    var _this;\n\n    _classCallCheck(this, Random);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Random).call(this, props));\n    _this.randomVerb = _this.props.data[Math.floor(Math.random() * _this.props.data.length)];\n    _this.randomPerson = Object.entries(_this.randomVerb)[Math.floor(Math.random() * 7) + 7];\n\n    _this.handleChange = function (event) {\n      _this.setState({\n        value: event.target.value\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      if (_this.randomPerson[1] === _this.state.value) {\n        alert(\"Correct!\");\n      }\n\n      _this.setState({\n        answerCheck: true,\n        answer: _this.randomPerson[1]\n      });\n    };\n\n    _this.handleHint = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        hint: _this.randomPerson[1].substring(0, 3)\n      });\n    };\n\n    _this.state = {\n      value: '',\n      answer: '',\n      hint: ''\n    };\n    return _this;\n  }\n\n  _createClass(Random, [{\n    key: \"render\",\n    value: function render() {\n      var _this$randomVerb = this.randomVerb,\n          infinitive = _this$randomVerb.infinitive,\n          infinitive_english = _this$randomVerb.infinitive_english,\n          tense_english = _this$randomVerb.tense_english;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Verb: \"), infinitive), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Translation: \"), infinitive_english), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Tense: \"), tense_english), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Person:\"), this.randomPerson[0] === 'form_1s' && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \" Singular, 1st person\"), this.randomPerson[0] === 'form_2s' && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \" Singular, 2nd person\"), this.randomPerson[0] === 'form_3s' && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \" Singular, 3rd person\"), this.randomPerson[0] === 'form_1p' && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \" Plural, 1st person\"), this.randomPerson[0] === 'form_2p' && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \" Plural, 2nd person\"), this.randomPerson[0] === 'form_3p' && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \" Plural, 3rd person\"), this.randomPerson[0] === 'gerund' && React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \" Gerund\")), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        style: {\n          fontSize: '12px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"En Espa\\xF1ol\")), this.state.hint && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"The answer starts with \", React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, this.state.hint, \"...\"), \".\"), this.state.answerCheck && React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"False, the correct answer is \", React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, this.state.answer), \".\"), React.createElement(\"div\", {\n        style: {\n          marginTop: '1rem',\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Check\"), React.createElement(\"button\", {\n        onClick: this.handleHint,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Hint\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return window.location.reload();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Next verb\")));\n    }\n  }]);\n\n  return Random;\n}(Component);\n\nexport default Random;","map":{"version":3,"sources":["/Users/blakefletcher/projects/spanish-conjugator-test/src/components/conjugatorPage/Random.js"],"names":["React","Component","Random","props","randomVerb","data","Math","floor","random","length","randomPerson","Object","entries","handleChange","event","setState","value","target","handleSubmit","preventDefault","state","alert","answerCheck","answer","handleHint","hint","substring","infinitive","infinitive_english","tense_english","fontSize","marginTop","display","justifyContent","window","location","reload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass Random extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            value: '',\n            answer: '',\n            hint: ''\n         }\n    }\n\n    randomVerb = this.props.data[Math.floor(Math.random() * this.props.data.length)];\n    randomPerson = Object.entries(this.randomVerb)[ Math.floor(Math.random() * 7) + 7 ]\n\n    handleChange = (event) => {\n        this.setState({value: event.target.value});\n      }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        if (this.randomPerson[1] === this.state.value) {\n            alert(\"Correct!\")\n        } this.setState({answerCheck: true, answer: this.randomPerson[1]}) \n    }\n\n    handleHint = (event) => {\n        event.preventDefault();\n        this.setState({hint: this.randomPerson[1].substring(0, 3)}) \n    }\n    \n    render() { \n        const { infinitive, infinitive_english, tense_english } = this.randomVerb\n        return ( \n            <div>\n                <p><b>Verb: </b>{infinitive}</p>\n                <p><b>Translation: </b>{infinitive_english}</p>\n                <p><b>Tense: </b>{tense_english}</p>\n                <p><b>Person:</b>\n                    { this.randomPerson[0] === 'form_1s' &&\n                        <span> Singular, 1st person</span>\n                    }\n                    { this.randomPerson[0] === 'form_2s' &&\n                        <span> Singular, 2nd person</span>\n                    }\n                    { this.randomPerson[0] === 'form_3s' &&\n                        <span> Singular, 3rd person</span>\n                    }\n                    { this.randomPerson[0] === 'form_1p' &&\n                        <span> Plural, 1st person</span>\n                    }\n                    { this.randomPerson[0] === 'form_2p' &&\n                        <span> Plural, 2nd person</span>\n                    }\n                    { this.randomPerson[0] === 'form_3p' &&\n                        <span> Plural, 3rd person</span>\n                    }\n                    { this.randomPerson[0] === 'gerund' &&\n                        <span> Gerund</span>\n                    }\n                </p>\n                <label>\n                    <input \n                        type=\"text\"\n                        value={this.state.value} \n                        onChange={this.handleChange}\n                    />\n                    <span style={{fontSize: '12px'}}>En Español</span>\n                </label>\n                { this.state.hint &&\n                    <p>The answer starts with <i>{this.state.hint}...</i>.</p>\n                }\n                { this.state.answerCheck &&\n                    <p>False, the correct answer is <i>{this.state.answer}</i>.</p>\n                }\n                <div style={{marginTop: '1rem', display: 'flex', justifyContent: 'space-between'}}>\n                    <button onClick={this.handleSubmit}>Check</button>\n                    <button onClick={this.handleHint}>Hint</button>\n                    <button onClick={() => window.location.reload()}>Next verb</button>\n                </div>\n            </div>\n         );\n    }\n}\n \nexport default Random;"]},"metadata":{},"sourceType":"module"}