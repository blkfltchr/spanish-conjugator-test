{"ast":null,"code":"var _jsxFileName = \"/Users/blakefletcher/projects/spanish-conjugator/src/components/conjugatorPage/Text.js\";\nimport React from 'react';\n\nvar randomProperty = function randomProperty(obj) {\n  // var keys = Object.keys(obj)\n  // return obj[keys[ Math.floor(Math.random() * 7) + 7 ]];\n  Object.entries(obj).forEach(function (entry) {\n    console.log(entry[1]);\n  });\n};\n\nvar Text = function Text(props) {\n  var randomVerb = props.data[Math.floor(Math.random() * props.data.length)];\n  var number = Math.floor(Math.random() * 7); // conjugated verbs range from index 0-6 in the object\n\n  var person = {\n    form_1s: 'Singular, 1st person',\n    form_2s: 'Singular, 2nd person',\n    form_3s: 'Singular, 3rd person',\n    form_1p: 'Plural, 1st person',\n    form_2p: 'Plural, 2nd person',\n    form_3p: 'Plural, 3rd person',\n    gerund: 'Gerund'\n  }; // another option would be to edit the database and replace the keys with the values in this object\n\n  console.log(randomProperty(randomVerb));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Verb: \", randomVerb.infinitive), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Translation: \", randomVerb.infinitive_english), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Tense: \", randomVerb.tense, \" (\", randomVerb.tense_english, \")\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Person: \", Object.values(person)[number]), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, randomProperty(randomVerb))));\n};\n\nexport default Text;","map":{"version":3,"sources":["/Users/blakefletcher/projects/spanish-conjugator/src/components/conjugatorPage/Text.js"],"names":["React","randomProperty","obj","Object","entries","forEach","entry","console","log","Text","props","randomVerb","data","Math","floor","random","length","number","person","form_1s","form_2s","form_3s","form_1p","form_2p","form_3p","gerund","infinitive","infinitive_english","tense","tense_english","values"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAIC,cAAc,GAAG,SAAjBA,cAAiB,CAAUC,GAAV,EAAe;AAClC;AACA;AACAC,EAAAA,MAAM,CAACC,OAAP,CAAeF,GAAf,EAAoBG,OAApB,CAA4B,UAAUC,KAAV,EAAiB;AAC3CC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAAC,CAAD,CAAjB;AACD,GAFD;AAGD,CAND;;AAUA,IAAMG,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK,EAAI;AAEpB,MAAMC,UAAU,GAAGD,KAAK,CAACE,IAAN,CAAWC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,KAAK,CAACE,IAAN,CAAWI,MAAtC,CAAX,CAAnB;AAEA,MAAMC,MAAM,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAf,CAJoB,CAI0B;;AAC9C,MAAMG,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE,sBADI;AAEbC,IAAAA,OAAO,EAAE,sBAFI;AAGbC,IAAAA,OAAO,EAAE,sBAHI;AAIbC,IAAAA,OAAO,EAAE,oBAJI;AAKbC,IAAAA,OAAO,EAAE,oBALI;AAMbC,IAAAA,OAAO,EAAE,oBANI;AAObC,IAAAA,MAAM,EAAE;AAPK,GAAf,CALoB,CAajB;;AACHlB,EAAAA,OAAO,CAACC,GAAR,CAAYP,cAAc,CAACU,UAAD,CAA1B;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUA,UAAU,CAACe,UAArB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBf,UAAU,CAACgB,kBAA5B,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACUhB,UAAU,CAACiB,KADrB,QAC8BjB,UAAU,CAACkB,aADzC,MAHF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAY1B,MAAM,CAAC2B,MAAP,CAAcZ,MAAd,EAAsBD,MAAtB,CAAZ,CANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIhB,cAAc,CAACU,UAAD,CAAlB,CAPF,CADF,CADF;AAaD,CA5BD;;AA8BA,eAAeF,IAAf","sourcesContent":["import React from 'react';\n\nvar randomProperty = function (obj) {\n  // var keys = Object.keys(obj)\n  // return obj[keys[ Math.floor(Math.random() * 7) + 7 ]];\n  Object.entries(obj).forEach(function (entry) {\n    console.log(entry[1])\n  })\n};\n\n\n\nconst Text = props => {\n  \n  const randomVerb = props.data[Math.floor(Math.random() * props.data.length)];\n\n  const number = Math.floor(Math.random() * 7); // conjugated verbs range from index 0-6 in the object\n  const person = {\n    form_1s: 'Singular, 1st person',\n    form_2s: 'Singular, 2nd person',\n    form_3s: 'Singular, 3rd person',\n    form_1p: 'Plural, 1st person',\n    form_2p: 'Plural, 2nd person',\n    form_3p: 'Plural, 3rd person',\n    gerund: 'Gerund'\n  }; // another option would be to edit the database and replace the keys with the values in this object\n  console.log(randomProperty(randomVerb))\n  return (\n    <div>\n      <div>\n        <p>Verb: {randomVerb.infinitive}</p>\n        <p>Translation: {randomVerb.infinitive_english}</p>\n        <p>\n          Tense: {randomVerb.tense} ({randomVerb.tense_english})\n        </p>\n        <p>Person: {Object.values(person)[number]}</p>\n        <p>{randomProperty(randomVerb)}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Text;\n"]},"metadata":{},"sourceType":"module"}