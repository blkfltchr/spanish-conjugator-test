{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/blakefletcher/projects/spanish-conjugator/src/components/conjugatorPage/Text.js\";\n\nimport React from 'react';\nimport ConjugatorInput from './ConjugatorInput';\n\nvar Text = function Text(props) {\n  var handleChange = function handleChange(event) {\n    _this.setState({\n      value: event.target.value\n    });\n  };\n\n  var randomVerb = props.data[Math.floor(Math.random() * props.data.length)];\n  var number = Math.floor(Math.random() * 7); // conjugated verbs range from index 0-6 in the object\n\n  var person = {\n    form_1s: 'Singular, 1st person',\n    form_2s: 'Singular, 2nd person',\n    form_3s: 'Singular, 3rd person',\n    form_1p: 'Plural, 1st person',\n    form_2p: 'Plural, 2nd person',\n    form_3p: 'Plural, 3rd person',\n    gerund: 'Gerund'\n  }; // another option would be to edit the database and replace the keys with the values in this object\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Verb: \", randomVerb.infinitive), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Translation: \", randomVerb.infinitive_english), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Tense: \", randomVerb.tense, \" (\", randomVerb.tense_english, \")\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Person: \", Object.values(person)[number])), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"answer\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Check\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Answer: \"));\n};\n\nexport default Text;","map":{"version":3,"sources":["/Users/blakefletcher/projects/spanish-conjugator/src/components/conjugatorPage/Text.js"],"names":["React","ConjugatorInput","Text","props","handleChange","event","setState","value","target","randomVerb","data","Math","floor","random","length","number","person","form_1s","form_2s","form_3s","form_1p","form_2p","form_3p","gerund","infinitive","infinitive_english","tense","tense_english","Object","values"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAGA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK,EAAI;AAEpB,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC9B,IAAA,KAAI,CAACC,QAAL,CAAc;AAACC,MAAAA,KAAK,EAAEF,KAAK,CAACG,MAAN,CAAaD;AAArB,KAAd;AACD,GAFD;;AAIA,MAAME,UAAU,GAAGN,KAAK,CAACO,IAAN,CAAWC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBV,KAAK,CAACO,IAAN,CAAWI,MAAtC,CAAX,CAAnB;AACA,MAAMC,MAAM,GAAGJ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAf,CAPoB,CAO0B;;AAC9C,MAAMG,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE,sBADI;AAEbC,IAAAA,OAAO,EAAE,sBAFI;AAGbC,IAAAA,OAAO,EAAE,sBAHI;AAIbC,IAAAA,OAAO,EAAE,oBAJI;AAKbC,IAAAA,OAAO,EAAE,oBALI;AAMbC,IAAAA,OAAO,EAAE,oBANI;AAObC,IAAAA,MAAM,EAAE;AAPK,GAAf,CARoB,CAgBjB;;AACH,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUd,UAAU,CAACe,UAArB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBf,UAAU,CAACgB,kBAA5B,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACUhB,UAAU,CAACiB,KADrB,QAC8BjB,UAAU,CAACkB,aADzC,MAHF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYC,MAAM,CAACC,MAAP,CAAcb,MAAd,EAAsBD,MAAtB,CAAZ,CANF,CADF,EASE;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,QAFT;AAGI,IAAA,QAAQ,EAAEX,YAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAdF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF,CADF;AAmBD,CApCD;;AAsCA,eAAeF,IAAf","sourcesContent":["import React from 'react';\nimport ConjugatorInput from './ConjugatorInput';\n\n\nconst Text = props => {\n\n  const handleChange = (event) => {\n    this.setState({value: event.target.value});\n  }\n\n  const randomVerb = props.data[Math.floor(Math.random() * props.data.length)];\n  const number = Math.floor(Math.random() * 7); // conjugated verbs range from index 0-6 in the object\n  const person = {\n    form_1s: 'Singular, 1st person',\n    form_2s: 'Singular, 2nd person',\n    form_3s: 'Singular, 3rd person',\n    form_1p: 'Plural, 1st person',\n    form_2p: 'Plural, 2nd person',\n    form_3p: 'Plural, 3rd person',\n    gerund: 'Gerund'\n  }; // another option would be to edit the database and replace the keys with the values in this object\n  return (\n    <div>\n      <div>\n        <p>Verb: {randomVerb.infinitive}</p>\n        <p>Translation: {randomVerb.infinitive_english}</p>\n        <p>\n          Tense: {randomVerb.tense} ({randomVerb.tense_english})\n        </p>\n        <p>Person: {Object.values(person)[number]}</p>\n      </div>\n      <input \n          type=\"text\"\n          name=\"answer\"\n          onChange={handleChange}\n      />\n      <button>Check</button>\n      <div>Answer: </div>\n    </div>\n  );\n};\n\nexport default Text;\n"]},"metadata":{},"sourceType":"module"}