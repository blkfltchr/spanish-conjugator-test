{"ast":null,"code":"var _jsxFileName = \"/Users/blakefletcher/projects/spanish-conjugator/src/components/conjugatorPage/Text.js\";\nimport React from 'react'; // var randomProperty = function (obj) {\n//   return obj[Object.keys(obj)[ Math.floor(Math.random() * 7) + 7 ]];\n// };\n\nvar Text = function Text(props) {\n  var randomVerb = props.data[Math.floor(Math.random() * props.data.length)];\n  var randomPerson = Object.entries(randomVerb)[Math.floor(Math.random() * 7) + 7]; // const number = Math.floor(Math.random() * 7); // conjugated verbs range from index 0-6 in the object\n  // const person = {\n  //   form_1s: 'Singular, 1st person',\n  //   form_2s: 'Singular, 2nd person',\n  //   form_3s: 'Singular, 3rd person',\n  //   form_1p: 'Plural, 1st person',\n  //   form_2p: 'Plural, 2nd person',\n  //   form_3p: 'Plural, 3rd person',\n  //   gerund: 'Gerund'\n  // }; // another option would be to edit the database and replace the keys with the values in this object\n\n  console.log(randomVerb);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Verb: \", randomVerb.infinitive), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Translation: \", randomVerb.infinitive_english), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Tense: \", randomVerb.tense, \" (\", randomVerb.tense_english, \")\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Person:\"), randomPerson[0] === 'form_1s' && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Singular, 1st person\"), randomPerson[0] === 'form_2s' && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Singular, 2nd person\"), randomPerson[0] === 'form_3s' && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Singular, 3rd person\"), randomPerson[0] === 'form_1p' && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Plural, 1st person\"), randomPerson[0] === 'form_2p' && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Plural, 2nd person\"), randomPerson[0] === 'form_3p' && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Plural, 3rd person\"), randomPerson[0] === 'gerund' && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Gerund\")), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, randomPerson[1])));\n};\n\nexport default Text;","map":{"version":3,"sources":["/Users/blakefletcher/projects/spanish-conjugator/src/components/conjugatorPage/Text.js"],"names":["React","Text","props","randomVerb","data","Math","floor","random","length","randomPerson","Object","entries","console","log","infinitive","infinitive_english","tense","tense_english"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK,EAAI;AAEpB,MAAMC,UAAU,GAAGD,KAAK,CAACE,IAAN,CAAWC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,KAAK,CAACE,IAAN,CAAWI,MAAtC,CAAX,CAAnB;AACA,MAAMC,YAAY,GAAGC,MAAM,CAACC,OAAP,CAAeR,UAAf,EAA4BE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,IAAgC,CAA5D,CAArB,CAHoB,CAIpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYV,UAAZ;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUA,UAAU,CAACW,UAArB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBX,UAAU,CAACY,kBAA5B,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACUZ,UAAU,CAACa,KADrB,QAC8Bb,UAAU,CAACc,aADzC,MAHF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAH,EACER,YAAY,CAAC,CAAD,CAAZ,KAAoB,SAApB,IACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ,EAIEA,YAAY,CAAC,CAAD,CAAZ,KAAoB,SAApB,IACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BALJ,EAOEA,YAAY,CAAC,CAAD,CAAZ,KAAoB,SAApB,IACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BARJ,EAUEA,YAAY,CAAC,CAAD,CAAZ,KAAoB,SAApB,IACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAXJ,EAaEA,YAAY,CAAC,CAAD,CAAZ,KAAoB,SAApB,IACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAdJ,EAgBEA,YAAY,CAAC,CAAD,CAAZ,KAAoB,SAApB,IACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAjBJ,EAmBEA,YAAY,CAAC,CAAD,CAAZ,KAAoB,QAApB,IACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApBJ,CANF,EA6BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,YAAY,CAAC,CAAD,CAAhB,CA7BF,CADF,CADF;AAmCD,CAlDD;;AAoDA,eAAeR,IAAf","sourcesContent":["import React from 'react';\n\n// var randomProperty = function (obj) {\n//   return obj[Object.keys(obj)[ Math.floor(Math.random() * 7) + 7 ]];\n// };\n\nconst Text = props => {\n  \n  const randomVerb = props.data[Math.floor(Math.random() * props.data.length)];\n  const randomPerson = Object.entries(randomVerb)[ Math.floor(Math.random() * 7) + 7 ]\n  // const number = Math.floor(Math.random() * 7); // conjugated verbs range from index 0-6 in the object\n  // const person = {\n  //   form_1s: 'Singular, 1st person',\n  //   form_2s: 'Singular, 2nd person',\n  //   form_3s: 'Singular, 3rd person',\n  //   form_1p: 'Plural, 1st person',\n  //   form_2p: 'Plural, 2nd person',\n  //   form_3p: 'Plural, 3rd person',\n  //   gerund: 'Gerund'\n  // }; // another option would be to edit the database and replace the keys with the values in this object\n  console.log(randomVerb)\n  return (\n    <div>\n      <div>\n        <p>Verb: {randomVerb.infinitive}</p>\n        <p>Translation: {randomVerb.infinitive_english}</p>\n        <p>\n          Tense: {randomVerb.tense} ({randomVerb.tense_english})\n        </p>\n        <p><b>Person:</b>{/* {Object.values(person)[number]} */}\n        { randomPerson[0] === 'form_1s' &&\n            <span>Singular, 1st person</span>\n        }\n        { randomPerson[0] === 'form_2s' &&\n            <span>Singular, 2nd person</span>\n        }\n        { randomPerson[0] === 'form_3s' &&\n            <span>Singular, 3rd person</span>\n        }\n        { randomPerson[0] === 'form_1p' &&\n            <span>Plural, 1st person</span>\n        }\n        { randomPerson[0] === 'form_2p' &&\n            <span>Plural, 2nd person</span>\n        }\n        { randomPerson[0] === 'form_3p' &&\n            <span>Plural, 3rd person</span>\n        }\n        { randomPerson[0] === 'gerund' &&\n            <span>Gerund</span>\n        }\n        </p>\n        <p>{randomPerson[1]}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Text;\n"]},"metadata":{},"sourceType":"module"}